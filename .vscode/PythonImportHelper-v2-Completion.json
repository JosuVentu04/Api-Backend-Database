[
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "current_app",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "current_app",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "current_app",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "abort",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "current_app",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "current_app",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "current_app",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "create_access_token",
        "importPath": "flask_jwt_extended",
        "description": "flask_jwt_extended",
        "isExtraImport": true,
        "detail": "flask_jwt_extended",
        "documentation": {}
    },
    {
        "label": "jwt_required",
        "importPath": "flask_jwt_extended",
        "description": "flask_jwt_extended",
        "isExtraImport": true,
        "detail": "flask_jwt_extended",
        "documentation": {}
    },
    {
        "label": "get_jwt_identity",
        "importPath": "flask_jwt_extended",
        "description": "flask_jwt_extended",
        "isExtraImport": true,
        "detail": "flask_jwt_extended",
        "documentation": {}
    },
    {
        "label": "create_access_token",
        "importPath": "flask_jwt_extended",
        "description": "flask_jwt_extended",
        "isExtraImport": true,
        "detail": "flask_jwt_extended",
        "documentation": {}
    },
    {
        "label": "jwt_required",
        "importPath": "flask_jwt_extended",
        "description": "flask_jwt_extended",
        "isExtraImport": true,
        "detail": "flask_jwt_extended",
        "documentation": {}
    },
    {
        "label": "get_jwt_identity",
        "importPath": "flask_jwt_extended",
        "description": "flask_jwt_extended",
        "isExtraImport": true,
        "detail": "flask_jwt_extended",
        "documentation": {}
    },
    {
        "label": "get_jwt",
        "importPath": "flask_jwt_extended",
        "description": "flask_jwt_extended",
        "isExtraImport": true,
        "detail": "flask_jwt_extended",
        "documentation": {}
    },
    {
        "label": "jwt_required",
        "importPath": "flask_jwt_extended",
        "description": "flask_jwt_extended",
        "isExtraImport": true,
        "detail": "flask_jwt_extended",
        "documentation": {}
    },
    {
        "label": "get_jwt_identity",
        "importPath": "flask_jwt_extended",
        "description": "flask_jwt_extended",
        "isExtraImport": true,
        "detail": "flask_jwt_extended",
        "documentation": {}
    },
    {
        "label": "sqlalchemy.exc",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "SQLAlchemyError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "SQLAlchemyError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "SQLAlchemyError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "generate_email_token",
        "importPath": "app.utils",
        "description": "app.utils",
        "isExtraImport": true,
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "confirm_email_token",
        "importPath": "app.utils",
        "description": "app.utils",
        "isExtraImport": true,
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "send_email",
        "importPath": "app.utils",
        "description": "app.utils",
        "isExtraImport": true,
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "generate_email_change_token",
        "importPath": "app.utils",
        "description": "app.utils",
        "isExtraImport": true,
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "confirm_email_change_token",
        "importPath": "app.utils",
        "description": "app.utils",
        "isExtraImport": true,
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "send_email",
        "importPath": "app.utils",
        "description": "app.utils",
        "isExtraImport": true,
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "Empleado",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "db",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Catalogo_Modelos",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Empleado",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "EstadoUsuario",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Sucursal",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "EstadoSucursal",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Empleado",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "db",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "URLSafeTimedSerializer",
        "importPath": "itsdangerous",
        "description": "itsdangerous",
        "isExtraImport": true,
        "detail": "itsdangerous",
        "documentation": {}
    },
    {
        "label": "SignatureExpired",
        "importPath": "itsdangerous",
        "description": "itsdangerous",
        "isExtraImport": true,
        "detail": "itsdangerous",
        "documentation": {}
    },
    {
        "label": "BadSignature",
        "importPath": "itsdangerous",
        "description": "itsdangerous",
        "isExtraImport": true,
        "detail": "itsdangerous",
        "documentation": {}
    },
    {
        "label": "URLSafeTimedSerializer",
        "importPath": "itsdangerous",
        "description": "itsdangerous",
        "isExtraImport": true,
        "detail": "itsdangerous",
        "documentation": {}
    },
    {
        "label": "SignatureExpired",
        "importPath": "itsdangerous",
        "description": "itsdangerous",
        "isExtraImport": true,
        "detail": "itsdangerous",
        "documentation": {}
    },
    {
        "label": "BadSignature",
        "importPath": "itsdangerous",
        "description": "itsdangerous",
        "isExtraImport": true,
        "detail": "itsdangerous",
        "documentation": {}
    },
    {
        "label": "URLSafeTimedSerializer",
        "importPath": "itsdangerous",
        "description": "itsdangerous",
        "isExtraImport": true,
        "detail": "itsdangerous",
        "documentation": {}
    },
    {
        "label": "SignatureExpired",
        "importPath": "itsdangerous",
        "description": "itsdangerous",
        "isExtraImport": true,
        "detail": "itsdangerous",
        "documentation": {}
    },
    {
        "label": "BadSignature",
        "importPath": "itsdangerous",
        "description": "itsdangerous",
        "isExtraImport": true,
        "detail": "itsdangerous",
        "documentation": {}
    },
    {
        "label": "db",
        "importPath": "app",
        "description": "app",
        "isExtraImport": true,
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "db",
        "importPath": "app",
        "description": "app",
        "isExtraImport": true,
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "db",
        "importPath": "app",
        "description": "app",
        "isExtraImport": true,
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "create_app",
        "importPath": "app",
        "description": "app",
        "isExtraImport": true,
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "create_app",
        "importPath": "app",
        "description": "app",
        "isExtraImport": true,
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "wraps",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "threading",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "threading",
        "description": "threading",
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "sqlalchemy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Mapped",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "mapped_column",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "generate_password_hash",
        "importPath": "werkzeug.security",
        "description": "werkzeug.security",
        "isExtraImport": true,
        "detail": "werkzeug.security",
        "documentation": {}
    },
    {
        "label": "check_password_hash",
        "importPath": "werkzeug.security",
        "description": "werkzeug.security",
        "isExtraImport": true,
        "detail": "werkzeug.security",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "EmailMessage",
        "importPath": "email.message",
        "description": "email.message",
        "isExtraImport": true,
        "detail": "email.message",
        "documentation": {}
    },
    {
        "label": "smtplib,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "smtplib.",
        "description": "smtplib.",
        "detail": "smtplib.",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "context",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "fileConfig",
        "importPath": "logging.config",
        "description": "logging.config",
        "isExtraImport": true,
        "detail": "logging.config",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "enviar_verificacion",
        "kind": 2,
        "importPath": "app.routes.auth",
        "description": "app.routes.auth",
        "peekOfCode": "def enviar_verificacion():\n    data = request.get_json() or {}\n    correo = data.get(\"correo\")\n    if not correo:\n        return {\"error\": \"correo requerido\"}, 400\n    empleado = Empleado.query.filter_by(correo=correo).first()\n    if not empleado:\n        return {\"error\": \"usuario no encontrado\"}, 404\n    token = generate_email_token(correo)\n    link  = url_for(\"auth.confirmar_correo\", token=token, _external=True)",
        "detail": "app.routes.auth",
        "documentation": {}
    },
    {
        "label": "confirmar_correo",
        "kind": 2,
        "importPath": "app.routes.auth",
        "description": "app.routes.auth",
        "peekOfCode": "def confirmar_correo(token):\n    # 1. Validar el token ---------------------------------------------\n    correo = confirm_email_token(token)            # None si expira / inválido\n    if not correo:                                 # redirige al frontend\n        url = f\"{current_app.config['DEV_FRONTEND_URL']}/correo-verificado?status=invalid\"\n        return redirect(url, 302)\n    # 2. Marcar la cuenta como verificada ------------------------------\n    emp = Empleado.query.filter_by(correo=correo).first_or_404()\n    if not emp.is_verified:\n        emp.is_verified = True",
        "detail": "app.routes.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "kind": 2,
        "importPath": "app.routes.auth",
        "description": "app.routes.auth",
        "peekOfCode": "def login():\n    data = request.get_json() or {}\n    correo = data.get(\"correo\")\n    password = data.get(\"password\")\n    sucursal_id = data.get(\"sucursal_id\")\n    if not correo or not password:\n        return {\"msg\": \"correo y password requeridos\"}, 400\n    emp = Empleado.query.filter_by(correo=correo, sucursal_id=sucursal_id).first()\n    if not emp or not emp.check_password(password):\n        return {\"msg\": \"Correo, contraseña o sucursal inválida\"}, 401",
        "detail": "app.routes.auth",
        "documentation": {}
    },
    {
        "label": "me",
        "kind": 2,
        "importPath": "app.routes.auth",
        "description": "app.routes.auth",
        "peekOfCode": "def me():\n    \"\"\"\n    Devuelve el empleado asociado al JWT:\n        Authorization: Bearer <access_token>\n    \"\"\"\n    emp_id = get_jwt_identity()                              # valor que grabaste en create_access_token\n    emp = Empleado.query.get_or_404(emp_id)                  # 404 si el id no existe\n    # método serialize() ya lo usas en /empleados\n    return jsonify(emp.serialize()), 200",
        "detail": "app.routes.auth",
        "documentation": {}
    },
    {
        "label": "bp",
        "kind": 5,
        "importPath": "app.routes.auth",
        "description": "app.routes.auth",
        "peekOfCode": "bp = Blueprint(\"auth\", __name__, url_prefix=\"/auth\")   # ← prefijo único\n# ────────────────────────────\n# 1) Enviar link de verificación\n# ────────────────────────────\n@bp.post(\"/enviar-verificacion\")\ndef enviar_verificacion():\n    data = request.get_json() or {}\n    correo = data.get(\"correo\")\n    if not correo:\n        return {\"error\": \"correo requerido\"}, 400",
        "detail": "app.routes.auth",
        "documentation": {}
    },
    {
        "label": "crear_modelo",
        "kind": 2,
        "importPath": "app.routes.devices_models",
        "description": "app.routes.devices_models",
        "peekOfCode": "def crear_modelo():\n    data = request.get_json() or {}\n    campos_obligatorios = [\"marca\", \"modelo\", \"almacenamiento\", \"anio\", \"ram\"]\n    errores = [\n        f\"El campo '{campo}' es requerido\" for campo in campos_obligatorios if not data.get(campo)\n    ]\n    if errores:\n        return {\"error\": errores}, 400\n    try:\n        nuevo_modelo = Catalogo_Modelos(",
        "detail": "app.routes.devices_models",
        "documentation": {}
    },
    {
        "label": "editar_modelo",
        "kind": 2,
        "importPath": "app.routes.devices_models",
        "description": "app.routes.devices_models",
        "peekOfCode": "def editar_modelo(modelo_id):\n    modelo = Catalogo_Modelos.query.get_or_404(modelo_id)\n    data = request.get_json() or {}\n    # Actualiza solo los campos recibidos en el JSON,\n    # Sin tocar los que no vienen.\n    atributos_actualizables = [\n        \"marca\", \"modelo\", \"almacenamiento\", \"anio\", \"ram\", \"descripcion\", \"imagen\",\n        \"color\", \"dual_sim\", \"red_movil\", \"version_android\", \"procesador\",\n        \"velocidad_procesador\", \"cantidad_nucleos\", \"tamanio_pantalla\",\n        \"tipo_resolucion\", \"frecuencia_actualizacion_pantalla\",",
        "detail": "app.routes.devices_models",
        "documentation": {}
    },
    {
        "label": "listar_modelos",
        "kind": 2,
        "importPath": "app.routes.devices_models",
        "description": "app.routes.devices_models",
        "peekOfCode": "def listar_modelos():\n    modelos = Catalogo_Modelos.query.all()\n    return jsonify([m.serialize_basic() for m in modelos])\n@dispositivos.get(\"/catalogo-modelos/<int:modelo_id>\")\ndef obtener_modelo(modelo_id):\n    modelo = Catalogo_Modelos.query.get_or_404(modelo_id)\n    return jsonify(modelo.serialize())",
        "detail": "app.routes.devices_models",
        "documentation": {}
    },
    {
        "label": "obtener_modelo",
        "kind": 2,
        "importPath": "app.routes.devices_models",
        "description": "app.routes.devices_models",
        "peekOfCode": "def obtener_modelo(modelo_id):\n    modelo = Catalogo_Modelos.query.get_or_404(modelo_id)\n    return jsonify(modelo.serialize())",
        "detail": "app.routes.devices_models",
        "documentation": {}
    },
    {
        "label": "dispositivos",
        "kind": 5,
        "importPath": "app.routes.devices_models",
        "description": "app.routes.devices_models",
        "peekOfCode": "dispositivos = Blueprint(\"dispositivos\", __name__, url_prefix=\"/devices\")\n@dispositivos.post(\"/nuevo-modelo\")\ndef crear_modelo():\n    data = request.get_json() or {}\n    campos_obligatorios = [\"marca\", \"modelo\", \"almacenamiento\", \"anio\", \"ram\"]\n    errores = [\n        f\"El campo '{campo}' es requerido\" for campo in campos_obligatorios if not data.get(campo)\n    ]\n    if errores:\n        return {\"error\": errores}, 400",
        "detail": "app.routes.devices_models",
        "documentation": {}
    },
    {
        "label": "get_serializer",
        "kind": 2,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "def get_serializer() -> URLSafeTimedSerializer:\n    secret = current_app.config[\"JWT_SECRET_KEY\"]\n    return URLSafeTimedSerializer(secret, salt=\"verify-email\")\ndef roles_required(roles_permitidos):\n    def wrapper(fn):\n        @wraps(fn)\n        @jwt_required()\n        def decorator(*args, **kwargs):\n            claims = get_jwt()\n            current_app.logger.info(f\"Payload completo JWT: {claims}\")",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "roles_required",
        "kind": 2,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "def roles_required(roles_permitidos):\n    def wrapper(fn):\n        @wraps(fn)\n        @jwt_required()\n        def decorator(*args, **kwargs):\n            claims = get_jwt()\n            current_app.logger.info(f\"Payload completo JWT: {claims}\")\n            rol_usuario = claims.get(\"role\", \"\").upper()\n            current_app.logger.info(f\"Rol extraído del JWT: {rol_usuario}\")\n            if rol_usuario not in roles_permitidos:",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "def index():\n    return jsonify(mensaje=\"Hola mundo desde Flask!\")\n# ──────────────────────────────\n# 1. CRUD SUCURSAL\n# ──────────────────────────────\n@main.post(\"/crear-sucursal\")\ndef crear_sucursal():\n    data = request.get_json() or {}\n    if not data.get(\"nombre\"):\n        return {\"error\": \"El nombre de la sucursal es requerido\"}, 400",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "crear_sucursal",
        "kind": 2,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "def crear_sucursal():\n    data = request.get_json() or {}\n    if not data.get(\"nombre\"):\n        return {\"error\": \"El nombre de la sucursal es requerido\"}, 400\n    if not data.get(\"direccion\"):\n        return {\"error\": \"La dirección es requerida\"}, 400\n    if not data.get(\"numero_telefono\"):\n        return {\"error\": \"El teléfono es requerido\"}, 400\n    try:\n        nueva = Sucursal(",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "obtener_sucursal",
        "kind": 2,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "def obtener_sucursal(id):\n    sucursal = Sucursal.query.get_or_404(id)\n    resultado = {\n        \"id\": sucursal.id,\n        \"nombre\": sucursal.nombre,\n        \"estado_sucursal\": sucursal.estado_sucursal.value,\n        \"direccion\": sucursal.direccion,\n        \"numero_telefonico\": sucursal.numero_telefonico,\n        \"fecha_apertura\": sucursal.fecha_apertura.isoformat() if sucursal.fecha_apertura else None,\n        \"fecha_clausura\": sucursal.fecha_clausura.isoformat() if sucursal.fecha_clausura else None,",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "obtener_todas_sucursales",
        "kind": 2,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "def obtener_todas_sucursales():\n    sucursales = Sucursal.query.all()\n    lista = [\n        {\n            \"id\": s.id,\n            \"nombre\": s.nombre,\n            \"estado_sucursal\": s.estado_sucursal.value,\n            \"direccion\": s.direccion,\n            \"numero_telefonico\": s.numero_telefonico,\n            \"fecha_apertura\": s.fecha_apertura.isoformat() if s.fecha_apertura else None,",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "crear_empleado",
        "kind": 2,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "def crear_empleado():\n    data = request.get_json() or {}\n    # --- Validaciones mínimas ----------------------\n    if not data.get(\"password\"):\n        return {\"error\": \"password es requerido\"}, 400\n    if not data.get(\"correo\"):\n        return {\"error\": \"correo es requerido\"}, 400\n    if Empleado.query.filter_by(correo=data[\"correo\"]).first():\n        return {\"error\": \"correo ya registrado\"}, 409\n    # -----------------------------------------------",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "empleados_por_sucursal",
        "kind": 2,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "def empleados_por_sucursal():\n    sucursal_id = request.args.get(\"sucursal_id\")\n    if not sucursal_id:\n        return {\"msg\": \"Falta parámetro sucursal_id\"}, 400\n    empleados = Empleado.query.filter_by(sucursal_id=sucursal_id).all()\n    return jsonify([e.serialize() for e in empleados])\n# ──────────────────────────────\n# 3. Confirmación de correo\n# ──────────────────────────────\n# ──────────────────────────────",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "empleado_demo",
        "kind": 2,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "def empleado_demo():\n    return jsonify(nombre=\"Ana\", estado_usuario=\"ACTIVO\")",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 5,
        "importPath": "app.routes.main",
        "description": "app.routes.main",
        "peekOfCode": "main = Blueprint(\"main\", __name__)\n# ──────────────────────────────\n# Helper para el serializer\n# ──────────────────────────────\ndef get_serializer() -> URLSafeTimedSerializer:\n    secret = current_app.config[\"JWT_SECRET_KEY\"]\n    return URLSafeTimedSerializer(secret, salt=\"verify-email\")\ndef roles_required(roles_permitidos):\n    def wrapper(fn):\n        @wraps(fn)",
        "detail": "app.routes.main",
        "documentation": {}
    },
    {
        "label": "send_email_thread",
        "kind": 2,
        "importPath": "app.routes.users",
        "description": "app.routes.users",
        "peekOfCode": "def send_email_thread(app, subject, html_body, to):\n    with app.app_context():\n        send_email(subject, html_body, to)\n@bp.post(\"/solicitar-cambio-correo\")\n@jwt_required()\ndef solicitar_cambio_correo():\n    user_id = get_jwt_identity()\n    nuevo_correo = request.json.get(\"nuevo_correo\")\n    if not nuevo_correo:\n        return jsonify({\"error\": \"Nuevo correo es requerido\"}), 400",
        "detail": "app.routes.users",
        "documentation": {}
    },
    {
        "label": "solicitar_cambio_correo",
        "kind": 2,
        "importPath": "app.routes.users",
        "description": "app.routes.users",
        "peekOfCode": "def solicitar_cambio_correo():\n    user_id = get_jwt_identity()\n    nuevo_correo = request.json.get(\"nuevo_correo\")\n    if not nuevo_correo:\n        return jsonify({\"error\": \"Nuevo correo es requerido\"}), 400\n    empleado = Empleado.query.get_or_404(user_id)\n    if nuevo_correo == empleado.correo:\n        return jsonify({\"error\": \"El nuevo correo es igual al actual\"}), 400\n    existente = Empleado.query.filter_by(correo=nuevo_correo).first()\n    if existente:",
        "detail": "app.routes.users",
        "documentation": {}
    },
    {
        "label": "confirmar_email_antiguo",
        "kind": 2,
        "importPath": "app.routes.users",
        "description": "app.routes.users",
        "peekOfCode": "def confirmar_email_antiguo(token):\n    correo = confirm_email_change_token(token, \"old\")\n    if not correo:\n        url = f\"{current_app.config['DEV_FRONTEND_URL']}/correo-verificado?status=invalid\"\n        return redirect(url, 302)\n    empleado = Empleado.query.filter_by(correo=correo).first()\n    if not empleado or empleado.correo_token_antiguo != token:\n        url = f\"{current_app.config['DEV_FRONTEND_URL']}/correo-verificado?status=invalid\"\n        return redirect(url, 302)\n    empleado.correo_antiguo_confirmado = True",
        "detail": "app.routes.users",
        "documentation": {}
    },
    {
        "label": "confirmar_email_nuevo",
        "kind": 2,
        "importPath": "app.routes.users",
        "description": "app.routes.users",
        "peekOfCode": "def confirmar_email_nuevo(token):\n    correo = confirm_email_change_token(token, \"new\")\n    if not correo:\n        url = f\"{current_app.config['DEV_FRONTEND_URL']}/correo-verificado?status=invalid\"\n        return redirect(url, 302)\n    empleado = Empleado.query.filter_by(correo_pendiente=correo).first()\n    if not empleado or empleado.correo_token_nuevo != token:\n        url = f\"{current_app.config['DEV_FRONTEND_URL']}/correo-verificado?status=invalid\"\n        return redirect(url, 302) \n    empleado.correo_nuevo_confirmado = True",
        "detail": "app.routes.users",
        "documentation": {}
    },
    {
        "label": "actualizar_perfil",
        "kind": 2,
        "importPath": "app.routes.users",
        "description": "app.routes.users",
        "peekOfCode": "def actualizar_perfil():\n    user_id = get_jwt_identity()\n    datos = request.get_json()\n    empleado = Empleado.query.get_or_404(user_id)\n    # Actualiza solo campos permitidos. NO permitimos cambiar correo aquí para mantener flujo seguro\n    if \"nombre\" in datos:\n        empleado.nombre = datos[\"nombre\"]\n    # Puedes agregar campos adicionales seguros aquí.\n    db.session.commit()\n    return jsonify({",
        "detail": "app.routes.users",
        "documentation": {}
    },
    {
        "label": "bp",
        "kind": 5,
        "importPath": "app.routes.users",
        "description": "app.routes.users",
        "peekOfCode": "bp = Blueprint(\"users\", __name__, url_prefix=\"/users\")\n# Función para enviar email en hilo con contexto Flask bien gestionado\ndef send_email_thread(app, subject, html_body, to):\n    with app.app_context():\n        send_email(subject, html_body, to)\n@bp.post(\"/solicitar-cambio-correo\")\n@jwt_required()\ndef solicitar_cambio_correo():\n    user_id = get_jwt_identity()\n    nuevo_correo = request.json.get(\"nuevo_correo\")",
        "detail": "app.routes.users",
        "documentation": {}
    },
    {
        "label": "EstadoUsuario",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class EstadoUsuario(PyEnum):\n    ACTIVO   = \"ACTIVO\"\n    INACTIVO = \"INACTIVO\"\nclass RolesEmpleado(PyEnum):\n    ADMIN = \"ADMIN\"\n    SOPORTE = \"SOPORTE\"\n    GERENTE = \"GERENTE\"\n    VENDEDOR = \"VENDEDOR\"\nclass EstadoSucursal(PyEnum):\n    ACTIVA     = \"ACTIVA\"",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "RolesEmpleado",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class RolesEmpleado(PyEnum):\n    ADMIN = \"ADMIN\"\n    SOPORTE = \"SOPORTE\"\n    GERENTE = \"GERENTE\"\n    VENDEDOR = \"VENDEDOR\"\nclass EstadoSucursal(PyEnum):\n    ACTIVA     = \"ACTIVA\"\n    CERRADA    = \"CERRADA\"\n    SUSPENDIDA = \"SUSPENDIDA\"\n# ──────────────────────────────────────────────",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "EstadoSucursal",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class EstadoSucursal(PyEnum):\n    ACTIVA     = \"ACTIVA\"\n    CERRADA    = \"CERRADA\"\n    SUSPENDIDA = \"SUSPENDIDA\"\n# ──────────────────────────────────────────────\n#  Modelo Sucursal\n# ──────────────────────────────────────────────\nclass Sucursal(db.Model):\n    __tablename__ = \"sucursal\"\n    id: Mapped[int] = mapped_column(Integer, primary_key=True)",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Sucursal",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Sucursal(db.Model):\n    __tablename__ = \"sucursal\"\n    id: Mapped[int] = mapped_column(Integer, primary_key=True)\n    nombre: Mapped[str] = mapped_column(\n        String(120), nullable=False, index=True\n    )\n    estado_sucursal: Mapped[EstadoSucursal] = mapped_column(\n        SqlEnum(\n            EstadoSucursal,\n            name=\"estado_sucursal_enum\",",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Empleado",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Empleado(db.Model):\n    __tablename__ = \"empleado\"\n    id: Mapped[int] = mapped_column(Integer, primary_key=True)\n    nombre: Mapped[str] = mapped_column(String(120), nullable=False)\n    # ---- verificación de correo ----\n    is_verified: Mapped[bool] = mapped_column(\n        Boolean, default=False, server_default=text(\"false\"), nullable=False\n    )\n    rol: Mapped[RolesEmpleado] = mapped_column(\n        SqlEnum(RolesEmpleado, name=\"roles_empleado\", native_enum=False, validate_strings=True), ",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Catalogo_Modelos",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Catalogo_Modelos(db.Model):\n    __tablename__ = \"catalogo_modelos\"\n    id: Mapped[int] = mapped_column(Integer, primary_key=True)\n    marca: Mapped[str] = mapped_column(String(120), nullable=False)\n    modelo: Mapped[str] = mapped_column(String(120), nullable=False)\n    almacenamiento: Mapped[str] = mapped_column(String(120), nullable=False)\n    anio: Mapped[str] = mapped_column(String(120), nullable= False)\n    ram: Mapped[str] = mapped_column(String(120), nullable=False)\n    descripcion: Mapped[str] = mapped_column(String(1500), nullable=True, default=\"Celular de alta calidad\")\n    color: Mapped[str] = mapped_column(String(120), nullable=True)",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "generate_email_token",
        "kind": 2,
        "importPath": "app.utils",
        "description": "app.utils",
        "peekOfCode": "def generate_email_token(email: str) -> str:\n    \"\"\"Devuelve un token firmado que contiene el correo y timestamp.\"\"\"\n    return _get_serializer().dumps(email)\ndef confirm_email_token(token: str, max_age: int = 86400) -> Optional[str]:\n    \"\"\"\n    Valida el token.  Si es correcto y no ha expirado, devuelve el correo.\n    Si falla devuelve None.\n    \"\"\"\n    try:\n        return _get_serializer().loads(token, max_age=max_age)",
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "confirm_email_token",
        "kind": 2,
        "importPath": "app.utils",
        "description": "app.utils",
        "peekOfCode": "def confirm_email_token(token: str, max_age: int = 86400) -> Optional[str]:\n    \"\"\"\n    Valida el token.  Si es correcto y no ha expirado, devuelve el correo.\n    Si falla devuelve None.\n    \"\"\"\n    try:\n        return _get_serializer().loads(token, max_age=max_age)\n    except SignatureExpired:\n        current_app.logger.info(\"Token expirado\")\n    except BadSignature:",
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "send_email",
        "kind": 2,
        "importPath": "app.utils",
        "description": "app.utils",
        "peekOfCode": "def send_email(subject: str, html_body: str, to: str):\n    \"\"\"\n    Envía un e-mail HTML usando los parámetros de configuración SMTP:\n        MAIL_SERVER\n        MAIL_PORT\n        MAIL_USERNAME\n        MAIL_PASSWORD\n        MAIL_USE_TLS (bool)\n    Si estás en desarrollo y no tienes SMTP, reemplaza el bloque\n    `with smtplib…` por un simple `current_app.logger.info(...)`.",
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "generate_email_change_token",
        "kind": 2,
        "importPath": "app.utils",
        "description": "app.utils",
        "peekOfCode": "def generate_email_change_token(email, purpose):\n    s = URLSafeTimedSerializer(current_app.config[\"SECRET_KEY\"])\n    return s.dumps(email, salt=f\"email-change-{purpose}\")\ndef confirm_email_change_token(token, purpose, max_age=86400):\n    s = URLSafeTimedSerializer(current_app.config[\"SECRET_KEY\"])\n    try:\n        email = s.loads(token, salt=f\"email-change-{purpose}\", max_age=max_age)\n        return email\n    except (SignatureExpired, BadSignature):\n        return None",
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "confirm_email_change_token",
        "kind": 2,
        "importPath": "app.utils",
        "description": "app.utils",
        "peekOfCode": "def confirm_email_change_token(token, purpose, max_age=86400):\n    s = URLSafeTimedSerializer(current_app.config[\"SECRET_KEY\"])\n    try:\n        email = s.loads(token, salt=f\"email-change-{purpose}\", max_age=max_age)\n        return email\n    except (SignatureExpired, BadSignature):\n        return None",
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "_SALT",
        "kind": 5,
        "importPath": "app.utils",
        "description": "app.utils",
        "peekOfCode": "_SALT = \"email-verification\"          # usa el mismo en dumps y loads\ndef _get_serializer() -> URLSafeTimedSerializer:\n    \"\"\"\n    Serializer configurado con SECRET_KEY y salt fijo.\n    Llamar SIEMPRE a esta función, no crear instancias manualmente.\n    \"\"\"\n    secret = current_app.config[\"SECRET_KEY\"]     # clave única de la app\n    return URLSafeTimedSerializer(secret, salt=_SALT)\ndef generate_email_token(email: str) -> str:\n    \"\"\"Devuelve un token firmado que contiene el correo y timestamp.\"\"\"",
        "detail": "app.utils",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.077ba0f8f7dd_",
        "description": "migrations.versions.077ba0f8f7dd_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('catalogo_modelos',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('marca', sa.String(length=120), nullable=False),\n    sa.Column('modelo', sa.String(length=120), nullable=False),\n    sa.Column('almacenamiento', sa.String(length=120), nullable=False),\n    sa.Column('anio', sa.String(length=120), nullable=False),\n    sa.Column('ram', sa.String(length=120), nullable=False),\n    sa.Column('descripcion', sa.String(length=120), nullable=True),",
        "detail": "migrations.versions.077ba0f8f7dd_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.077ba0f8f7dd_",
        "description": "migrations.versions.077ba0f8f7dd_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_table('catalogo_modelos')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.077ba0f8f7dd_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.077ba0f8f7dd_",
        "description": "migrations.versions.077ba0f8f7dd_",
        "peekOfCode": "revision = '077ba0f8f7dd'\ndown_revision = 'e7d17459afa8'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('catalogo_modelos',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('marca', sa.String(length=120), nullable=False),\n    sa.Column('modelo', sa.String(length=120), nullable=False),",
        "detail": "migrations.versions.077ba0f8f7dd_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.077ba0f8f7dd_",
        "description": "migrations.versions.077ba0f8f7dd_",
        "peekOfCode": "down_revision = 'e7d17459afa8'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('catalogo_modelos',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('marca', sa.String(length=120), nullable=False),\n    sa.Column('modelo', sa.String(length=120), nullable=False),\n    sa.Column('almacenamiento', sa.String(length=120), nullable=False),",
        "detail": "migrations.versions.077ba0f8f7dd_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.077ba0f8f7dd_",
        "description": "migrations.versions.077ba0f8f7dd_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('catalogo_modelos',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('marca', sa.String(length=120), nullable=False),\n    sa.Column('modelo', sa.String(length=120), nullable=False),\n    sa.Column('almacenamiento', sa.String(length=120), nullable=False),\n    sa.Column('anio', sa.String(length=120), nullable=False),",
        "detail": "migrations.versions.077ba0f8f7dd_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.077ba0f8f7dd_",
        "description": "migrations.versions.077ba0f8f7dd_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('catalogo_modelos',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('marca', sa.String(length=120), nullable=False),\n    sa.Column('modelo', sa.String(length=120), nullable=False),\n    sa.Column('almacenamiento', sa.String(length=120), nullable=False),\n    sa.Column('anio', sa.String(length=120), nullable=False),\n    sa.Column('ram', sa.String(length=120), nullable=False),",
        "detail": "migrations.versions.077ba0f8f7dd_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.09ab989b92e9_",
        "description": "migrations.versions.09ab989b92e9_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('color', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('dual_sim', sa.Boolean(), server_default=sa.text('false'), nullable=True))\n        batch_op.add_column(sa.Column('red_movil', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('version_android', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('procesador', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('velocidad_procesador', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('cantidad_nucleos', sa.String(length=120), nullable=True))",
        "detail": "migrations.versions.09ab989b92e9_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.09ab989b92e9_",
        "description": "migrations.versions.09ab989b92e9_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.drop_column('resistencia_caidas')\n        batch_op.drop_column('resistencia_polvo')\n        batch_op.drop_column('resistencia_agua')\n        batch_op.drop_column('resistencia_salpicaduras')\n        batch_op.drop_column('huella_dactilar')\n        batch_op.drop_column('carga_rapida')\n        batch_op.drop_column('capacidad_bateria')",
        "detail": "migrations.versions.09ab989b92e9_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.09ab989b92e9_",
        "description": "migrations.versions.09ab989b92e9_",
        "peekOfCode": "revision = '09ab989b92e9'\ndown_revision = '8407ecfd6181'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('color', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('dual_sim', sa.Boolean(), server_default=sa.text('false'), nullable=True))\n        batch_op.add_column(sa.Column('red_movil', sa.String(length=120), nullable=True))",
        "detail": "migrations.versions.09ab989b92e9_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.09ab989b92e9_",
        "description": "migrations.versions.09ab989b92e9_",
        "peekOfCode": "down_revision = '8407ecfd6181'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('color', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('dual_sim', sa.Boolean(), server_default=sa.text('false'), nullable=True))\n        batch_op.add_column(sa.Column('red_movil', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('version_android', sa.String(length=120), nullable=True))",
        "detail": "migrations.versions.09ab989b92e9_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.09ab989b92e9_",
        "description": "migrations.versions.09ab989b92e9_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('color', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('dual_sim', sa.Boolean(), server_default=sa.text('false'), nullable=True))\n        batch_op.add_column(sa.Column('red_movil', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('version_android', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('procesador', sa.String(length=120), nullable=True))",
        "detail": "migrations.versions.09ab989b92e9_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.09ab989b92e9_",
        "description": "migrations.versions.09ab989b92e9_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('color', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('dual_sim', sa.Boolean(), server_default=sa.text('false'), nullable=True))\n        batch_op.add_column(sa.Column('red_movil', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('version_android', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('procesador', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('velocidad_procesador', sa.String(length=120), nullable=True))",
        "detail": "migrations.versions.09ab989b92e9_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.1aeb40bbe4cf_",
        "description": "migrations.versions.1aeb40bbe4cf_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=255),\n               type_=sa.String(length=255),\n               existing_nullable=False)",
        "detail": "migrations.versions.1aeb40bbe4cf_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.1aeb40bbe4cf_",
        "description": "migrations.versions.1aeb40bbe4cf_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('password_hash',\n               existing_type=sa.String(length=128),\n               type_=sa.VARCHAR(length=255),\n               existing_nullable=True)\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.1aeb40bbe4cf_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.1aeb40bbe4cf_",
        "description": "migrations.versions.1aeb40bbe4cf_",
        "peekOfCode": "revision = '1aeb40bbe4cf'\ndown_revision = '5b16f1b229b0'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.1aeb40bbe4cf_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.1aeb40bbe4cf_",
        "description": "migrations.versions.1aeb40bbe4cf_",
        "peekOfCode": "down_revision = '5b16f1b229b0'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',",
        "detail": "migrations.versions.1aeb40bbe4cf_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.1aeb40bbe4cf_",
        "description": "migrations.versions.1aeb40bbe4cf_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=255),",
        "detail": "migrations.versions.1aeb40bbe4cf_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.1aeb40bbe4cf_",
        "description": "migrations.versions.1aeb40bbe4cf_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=255),\n               type_=sa.String(length=255),",
        "detail": "migrations.versions.1aeb40bbe4cf_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.3458aa715262_",
        "description": "migrations.versions.3458aa715262_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('rol', sa.Enum('SOPORTE', 'ADMIN', 'VENDEDOR', name='roles_empleado', native_enum=False), server_default=sa.text(\"'VENDEDOR'\"), nullable=False))\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.3458aa715262_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.3458aa715262_",
        "description": "migrations.versions.3458aa715262_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.drop_column('rol')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.3458aa715262_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.3458aa715262_",
        "description": "migrations.versions.3458aa715262_",
        "peekOfCode": "revision = '3458aa715262'\ndown_revision = '1aeb40bbe4cf'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('rol', sa.Enum('SOPORTE', 'ADMIN', 'VENDEDOR', name='roles_empleado', native_enum=False), server_default=sa.text(\"'VENDEDOR'\"), nullable=False))\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),",
        "detail": "migrations.versions.3458aa715262_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.3458aa715262_",
        "description": "migrations.versions.3458aa715262_",
        "peekOfCode": "down_revision = '1aeb40bbe4cf'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('rol', sa.Enum('SOPORTE', 'ADMIN', 'VENDEDOR', name='roles_empleado', native_enum=False), server_default=sa.text(\"'VENDEDOR'\"), nullable=False))\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.3458aa715262_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.3458aa715262_",
        "description": "migrations.versions.3458aa715262_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('rol', sa.Enum('SOPORTE', 'ADMIN', 'VENDEDOR', name='roles_empleado', native_enum=False), server_default=sa.text(\"'VENDEDOR'\"), nullable=False))\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.3458aa715262_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.3458aa715262_",
        "description": "migrations.versions.3458aa715262_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('rol', sa.Enum('SOPORTE', 'ADMIN', 'VENDEDOR', name='roles_empleado', native_enum=False), server_default=sa.text(\"'VENDEDOR'\"), nullable=False))\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n    # ### end Alembic commands ###\ndef downgrade():",
        "detail": "migrations.versions.3458aa715262_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.359f51fc78de_",
        "description": "migrations.versions.359f51fc78de_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.alter_column('descripcion',\n               existing_type=sa.VARCHAR(length=120),\n               type_=sa.String(length=1500),\n               existing_nullable=True)\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.359f51fc78de_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.359f51fc78de_",
        "description": "migrations.versions.359f51fc78de_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.alter_column('descripcion',\n               existing_type=sa.String(length=1500),\n               type_=sa.VARCHAR(length=120),\n               existing_nullable=True)\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.359f51fc78de_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.359f51fc78de_",
        "description": "migrations.versions.359f51fc78de_",
        "peekOfCode": "revision = '359f51fc78de'\ndown_revision = '09ab989b92e9'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.alter_column('descripcion',\n               existing_type=sa.VARCHAR(length=120),\n               type_=sa.String(length=1500),",
        "detail": "migrations.versions.359f51fc78de_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.359f51fc78de_",
        "description": "migrations.versions.359f51fc78de_",
        "peekOfCode": "down_revision = '09ab989b92e9'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.alter_column('descripcion',\n               existing_type=sa.VARCHAR(length=120),\n               type_=sa.String(length=1500),\n               existing_nullable=True)",
        "detail": "migrations.versions.359f51fc78de_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.359f51fc78de_",
        "description": "migrations.versions.359f51fc78de_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.alter_column('descripcion',\n               existing_type=sa.VARCHAR(length=120),\n               type_=sa.String(length=1500),\n               existing_nullable=True)\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.359f51fc78de_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.359f51fc78de_",
        "description": "migrations.versions.359f51fc78de_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.alter_column('descripcion',\n               existing_type=sa.VARCHAR(length=120),\n               type_=sa.String(length=1500),\n               existing_nullable=True)\n    # ### end Alembic commands ###\ndef downgrade():",
        "detail": "migrations.versions.359f51fc78de_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.3602271406fd_",
        "description": "migrations.versions.3602271406fd_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('email_verificado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.drop_column('email_verificado')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.3602271406fd_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.3602271406fd_",
        "description": "migrations.versions.3602271406fd_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.drop_column('email_verificado')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.3602271406fd_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.3602271406fd_",
        "description": "migrations.versions.3602271406fd_",
        "peekOfCode": "revision = '3602271406fd'\ndown_revision = '8251dd184efd'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('email_verificado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade():",
        "detail": "migrations.versions.3602271406fd_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.3602271406fd_",
        "description": "migrations.versions.3602271406fd_",
        "peekOfCode": "down_revision = '8251dd184efd'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('email_verificado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.3602271406fd_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.3602271406fd_",
        "description": "migrations.versions.3602271406fd_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('email_verificado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:",
        "detail": "migrations.versions.3602271406fd_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.3602271406fd_",
        "description": "migrations.versions.3602271406fd_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('email_verificado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.drop_column('email_verificado')",
        "detail": "migrations.versions.3602271406fd_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.39b3c80dd00f_",
        "description": "migrations.versions.39b3c80dd00f_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:",
        "detail": "migrations.versions.39b3c80dd00f_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.39b3c80dd00f_",
        "description": "migrations.versions.39b3c80dd00f_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.39b3c80dd00f_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.39b3c80dd00f_",
        "description": "migrations.versions.39b3c80dd00f_",
        "peekOfCode": "revision = '39b3c80dd00f'\ndown_revision = '3458aa715262'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.39b3c80dd00f_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.39b3c80dd00f_",
        "description": "migrations.versions.39b3c80dd00f_",
        "peekOfCode": "down_revision = '3458aa715262'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.39b3c80dd00f_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.39b3c80dd00f_",
        "description": "migrations.versions.39b3c80dd00f_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n    # ### end Alembic commands ###\ndef downgrade():",
        "detail": "migrations.versions.39b3c80dd00f_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.39b3c80dd00f_",
        "description": "migrations.versions.39b3c80dd00f_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.39b3c80dd00f_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "description": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_sucursal', sa.Enum('ACTIVA', 'CERRADA', 'SUSPENDIDA', name='estado_sucursal_enum', native_enum=False), server_default=sa.text(\"'ACTIVA'\"), nullable=False),\n    sa.Column('direccion', sa.String(length=255), nullable=False),\n    sa.Column('numero_telefonico', sa.String(length=12), nullable=False),\n    sa.Column('fecha_apertura', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),\n    sa.Column('fecha_clausura', sa.DateTime(timezone=True), nullable=False),",
        "detail": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "description": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_sucursal',\n    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),\n    sa.Column('nombre', sa.VARCHAR(length=120), autoincrement=False, nullable=False),\n    sa.Column('estado_usuario', postgresql.ENUM('ACTIVO', 'INACTIVO', name='estado_usuario_enum'), autoincrement=False, nullable=False),\n    sa.Column('correo', sa.VARCHAR(length=120), autoincrement=False, nullable=False),\n    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),\n    sa.PrimaryKeyConstraint('id', name=op.f('empleado_sucursal_pkey'))\n    )",
        "detail": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "description": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "peekOfCode": "revision = '51c2375b82ef'\ndown_revision = '5ac3a84ed671'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_sucursal', sa.Enum('ACTIVA', 'CERRADA', 'SUSPENDIDA', name='estado_sucursal_enum', native_enum=False), server_default=sa.text(\"'ACTIVA'\"), nullable=False),",
        "detail": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "description": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "peekOfCode": "down_revision = '5ac3a84ed671'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_sucursal', sa.Enum('ACTIVA', 'CERRADA', 'SUSPENDIDA', name='estado_sucursal_enum', native_enum=False), server_default=sa.text(\"'ACTIVA'\"), nullable=False),\n    sa.Column('direccion', sa.String(length=255), nullable=False),",
        "detail": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "description": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_sucursal', sa.Enum('ACTIVA', 'CERRADA', 'SUSPENDIDA', name='estado_sucursal_enum', native_enum=False), server_default=sa.text(\"'ACTIVA'\"), nullable=False),\n    sa.Column('direccion', sa.String(length=255), nullable=False),\n    sa.Column('numero_telefonico', sa.String(length=12), nullable=False),",
        "detail": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "description": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_sucursal', sa.Enum('ACTIVA', 'CERRADA', 'SUSPENDIDA', name='estado_sucursal_enum', native_enum=False), server_default=sa.text(\"'ACTIVA'\"), nullable=False),\n    sa.Column('direccion', sa.String(length=255), nullable=False),\n    sa.Column('numero_telefonico', sa.String(length=12), nullable=False),\n    sa.Column('fecha_apertura', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),",
        "detail": "migrations.versions.51c2375b82ef_modelo_de_sucursal_y_de_empleado_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.53da6b12b55f_migración_limpia",
        "description": "migrations.versions.53da6b12b55f_migración_limpia",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_usuario',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estadousuario'), nullable=False),\n    sa.PrimaryKeyConstraint('id')\n    )\n    # ### end Alembic commands ###\ndef downgrade():",
        "detail": "migrations.versions.53da6b12b55f_migración_limpia",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.53da6b12b55f_migración_limpia",
        "description": "migrations.versions.53da6b12b55f_migración_limpia",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_table('empleado_usuario')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.53da6b12b55f_migración_limpia",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.53da6b12b55f_migración_limpia",
        "description": "migrations.versions.53da6b12b55f_migración_limpia",
        "peekOfCode": "revision = '53da6b12b55f'\ndown_revision = None\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_usuario',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estadousuario'), nullable=False),",
        "detail": "migrations.versions.53da6b12b55f_migración_limpia",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.53da6b12b55f_migración_limpia",
        "description": "migrations.versions.53da6b12b55f_migración_limpia",
        "peekOfCode": "down_revision = None\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_usuario',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estadousuario'), nullable=False),\n    sa.PrimaryKeyConstraint('id')",
        "detail": "migrations.versions.53da6b12b55f_migración_limpia",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.53da6b12b55f_migración_limpia",
        "description": "migrations.versions.53da6b12b55f_migración_limpia",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_usuario',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estadousuario'), nullable=False),\n    sa.PrimaryKeyConstraint('id')\n    )",
        "detail": "migrations.versions.53da6b12b55f_migración_limpia",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.53da6b12b55f_migración_limpia",
        "description": "migrations.versions.53da6b12b55f_migración_limpia",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_usuario',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estadousuario'), nullable=False),\n    sa.PrimaryKeyConstraint('id')\n    )\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.53da6b12b55f_migración_limpia",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.5ac3a84ed671_",
        "description": "migrations.versions.5ac3a84ed671_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estado_usuario_enum'), nullable=False),\n    sa.Column('correo', sa.String(length=120), nullable=False),\n    sa.Column('password', sa.String(length=128), nullable=False),\n    sa.PrimaryKeyConstraint('id')\n    )",
        "detail": "migrations.versions.5ac3a84ed671_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.5ac3a84ed671_",
        "description": "migrations.versions.5ac3a84ed671_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_usuario',\n    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),\n    sa.Column('nombre', sa.VARCHAR(length=120), autoincrement=False, nullable=False),\n    sa.Column('estado_usuario', postgresql.ENUM('ACTIVO', 'INACTIVO', name='estadousuario'), autoincrement=False, nullable=False),\n    sa.PrimaryKeyConstraint('id', name=op.f('empleado_usuario_pkey'))\n    )\n    op.drop_table('empleado_sucursal')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.5ac3a84ed671_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.5ac3a84ed671_",
        "description": "migrations.versions.5ac3a84ed671_",
        "peekOfCode": "revision = '5ac3a84ed671'\ndown_revision = '53da6b12b55f'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estado_usuario_enum'), nullable=False),",
        "detail": "migrations.versions.5ac3a84ed671_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.5ac3a84ed671_",
        "description": "migrations.versions.5ac3a84ed671_",
        "peekOfCode": "down_revision = '53da6b12b55f'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estado_usuario_enum'), nullable=False),\n    sa.Column('correo', sa.String(length=120), nullable=False),",
        "detail": "migrations.versions.5ac3a84ed671_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.5ac3a84ed671_",
        "description": "migrations.versions.5ac3a84ed671_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estado_usuario_enum'), nullable=False),\n    sa.Column('correo', sa.String(length=120), nullable=False),\n    sa.Column('password', sa.String(length=128), nullable=False),",
        "detail": "migrations.versions.5ac3a84ed671_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.5ac3a84ed671_",
        "description": "migrations.versions.5ac3a84ed671_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('empleado_sucursal',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('nombre', sa.String(length=120), nullable=False),\n    sa.Column('estado_usuario', sa.Enum('ACTIVO', 'INACTIVO', name='estado_usuario_enum'), nullable=False),\n    sa.Column('correo', sa.String(length=120), nullable=False),\n    sa.Column('password', sa.String(length=128), nullable=False),\n    sa.PrimaryKeyConstraint('id')",
        "detail": "migrations.versions.5ac3a84ed671_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.5b16f1b229b0_",
        "description": "migrations.versions.5b16f1b229b0_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=500),\n               type_=sa.String(length=255),\n               existing_nullable=False)",
        "detail": "migrations.versions.5b16f1b229b0_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.5b16f1b229b0_",
        "description": "migrations.versions.5b16f1b229b0_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('password_hash',\n               existing_type=sa.String(length=128),\n               type_=sa.VARCHAR(length=500),\n               existing_nullable=False)\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.5b16f1b229b0_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.5b16f1b229b0_",
        "description": "migrations.versions.5b16f1b229b0_",
        "peekOfCode": "revision = '5b16f1b229b0'\ndown_revision = 'dd5a117c2fca'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.5b16f1b229b0_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.5b16f1b229b0_",
        "description": "migrations.versions.5b16f1b229b0_",
        "peekOfCode": "down_revision = 'dd5a117c2fca'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',",
        "detail": "migrations.versions.5b16f1b229b0_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.5b16f1b229b0_",
        "description": "migrations.versions.5b16f1b229b0_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=500),",
        "detail": "migrations.versions.5b16f1b229b0_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.5b16f1b229b0_",
        "description": "migrations.versions.5b16f1b229b0_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=500),\n               type_=sa.String(length=255),",
        "detail": "migrations.versions.5b16f1b229b0_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.6ccf51ad1887_",
        "description": "migrations.versions.6ccf51ad1887_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=500),\n               type_=sa.String(length=500),\n               existing_nullable=False)",
        "detail": "migrations.versions.6ccf51ad1887_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.6ccf51ad1887_",
        "description": "migrations.versions.6ccf51ad1887_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('email_verificado', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))\n        batch_op.alter_column('password_hash',\n               existing_type=sa.String(length=500),\n               type_=sa.VARCHAR(length=500),\n               existing_nullable=False)\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),",
        "detail": "migrations.versions.6ccf51ad1887_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.6ccf51ad1887_",
        "description": "migrations.versions.6ccf51ad1887_",
        "peekOfCode": "revision = '6ccf51ad1887'\ndown_revision = '3602271406fd'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.6ccf51ad1887_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.6ccf51ad1887_",
        "description": "migrations.versions.6ccf51ad1887_",
        "peekOfCode": "down_revision = '3602271406fd'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',",
        "detail": "migrations.versions.6ccf51ad1887_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.6ccf51ad1887_",
        "description": "migrations.versions.6ccf51ad1887_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=500),",
        "detail": "migrations.versions.6ccf51ad1887_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.6ccf51ad1887_",
        "description": "migrations.versions.6ccf51ad1887_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=500),\n               type_=sa.String(length=500),",
        "detail": "migrations.versions.6ccf51ad1887_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.8251dd184efd_",
        "description": "migrations.versions.8251dd184efd_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=False, server_default=sa.text('false')))\n        batch_op.add_column(sa.Column('fecha_verificacion', sa.DateTime(timezone=True), nullable=True))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.drop_column('fecha_verificacion')",
        "detail": "migrations.versions.8251dd184efd_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.8251dd184efd_",
        "description": "migrations.versions.8251dd184efd_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.drop_column('fecha_verificacion')\n        batch_op.drop_column('is_verified')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.8251dd184efd_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.8251dd184efd_",
        "description": "migrations.versions.8251dd184efd_",
        "peekOfCode": "revision = '8251dd184efd'\ndown_revision = 'cd9a75c738c6'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=False, server_default=sa.text('false')))\n        batch_op.add_column(sa.Column('fecha_verificacion', sa.DateTime(timezone=True), nullable=True))\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.8251dd184efd_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.8251dd184efd_",
        "description": "migrations.versions.8251dd184efd_",
        "peekOfCode": "down_revision = 'cd9a75c738c6'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=False, server_default=sa.text('false')))\n        batch_op.add_column(sa.Column('fecha_verificacion', sa.DateTime(timezone=True), nullable=True))\n    # ### end Alembic commands ###\ndef downgrade():",
        "detail": "migrations.versions.8251dd184efd_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.8251dd184efd_",
        "description": "migrations.versions.8251dd184efd_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=False, server_default=sa.text('false')))\n        batch_op.add_column(sa.Column('fecha_verificacion', sa.DateTime(timezone=True), nullable=True))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.8251dd184efd_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.8251dd184efd_",
        "description": "migrations.versions.8251dd184efd_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=False, server_default=sa.text('false')))\n        batch_op.add_column(sa.Column('fecha_verificacion', sa.DateTime(timezone=True), nullable=True))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:",
        "detail": "migrations.versions.8251dd184efd_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.8407ecfd6181_",
        "description": "migrations.versions.8407ecfd6181_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('imagen', sa.String(length=550), nullable=True))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.drop_column('imagen')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.8407ecfd6181_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.8407ecfd6181_",
        "description": "migrations.versions.8407ecfd6181_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.drop_column('imagen')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.8407ecfd6181_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.8407ecfd6181_",
        "description": "migrations.versions.8407ecfd6181_",
        "peekOfCode": "revision = '8407ecfd6181'\ndown_revision = '077ba0f8f7dd'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('imagen', sa.String(length=550), nullable=True))\n    # ### end Alembic commands ###\ndef downgrade():",
        "detail": "migrations.versions.8407ecfd6181_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.8407ecfd6181_",
        "description": "migrations.versions.8407ecfd6181_",
        "peekOfCode": "down_revision = '077ba0f8f7dd'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('imagen', sa.String(length=550), nullable=True))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.8407ecfd6181_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.8407ecfd6181_",
        "description": "migrations.versions.8407ecfd6181_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('imagen', sa.String(length=550), nullable=True))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:",
        "detail": "migrations.versions.8407ecfd6181_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.8407ecfd6181_",
        "description": "migrations.versions.8407ecfd6181_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('imagen', sa.String(length=550), nullable=True))\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('catalogo_modelos', schema=None) as batch_op:\n        batch_op.drop_column('imagen')",
        "detail": "migrations.versions.8407ecfd6181_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.cd9a75c738c6_",
        "description": "migrations.versions.cd9a75c738c6_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('sucursal', schema=None) as batch_op:\n        batch_op.alter_column('fecha_apertura',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True,\n               existing_server_default=sa.text('now()'))\n        batch_op.alter_column('fecha_clausura',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.cd9a75c738c6_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.cd9a75c738c6_",
        "description": "migrations.versions.cd9a75c738c6_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('sucursal', schema=None) as batch_op:\n        batch_op.alter_column('fecha_clausura',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=False)\n        batch_op.alter_column('fecha_apertura',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=False,\n               existing_server_default=sa.text('now()'))",
        "detail": "migrations.versions.cd9a75c738c6_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.cd9a75c738c6_",
        "description": "migrations.versions.cd9a75c738c6_",
        "peekOfCode": "revision = 'cd9a75c738c6'\ndown_revision = 'd2deb4db4111'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('sucursal', schema=None) as batch_op:\n        batch_op.alter_column('fecha_apertura',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True,",
        "detail": "migrations.versions.cd9a75c738c6_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.cd9a75c738c6_",
        "description": "migrations.versions.cd9a75c738c6_",
        "peekOfCode": "down_revision = 'd2deb4db4111'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('sucursal', schema=None) as batch_op:\n        batch_op.alter_column('fecha_apertura',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True,\n               existing_server_default=sa.text('now()'))",
        "detail": "migrations.versions.cd9a75c738c6_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.cd9a75c738c6_",
        "description": "migrations.versions.cd9a75c738c6_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('sucursal', schema=None) as batch_op:\n        batch_op.alter_column('fecha_apertura',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True,\n               existing_server_default=sa.text('now()'))\n        batch_op.alter_column('fecha_clausura',",
        "detail": "migrations.versions.cd9a75c738c6_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.cd9a75c738c6_",
        "description": "migrations.versions.cd9a75c738c6_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('sucursal', schema=None) as batch_op:\n        batch_op.alter_column('fecha_apertura',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True,\n               existing_server_default=sa.text('now()'))\n        batch_op.alter_column('fecha_clausura',\n               existing_type=postgresql.TIMESTAMP(timezone=True),",
        "detail": "migrations.versions.cd9a75c738c6_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.d2deb4db4111_",
        "description": "migrations.versions.d2deb4db4111_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=128),\n               type_=sa.String(length=500),\n               existing_nullable=False)\n    # ### end Alembic commands ###\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.d2deb4db4111_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.d2deb4db4111_",
        "description": "migrations.versions.d2deb4db4111_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('password_hash',\n               existing_type=sa.String(length=500),\n               type_=sa.VARCHAR(length=128),\n               existing_nullable=False)\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.d2deb4db4111_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.d2deb4db4111_",
        "description": "migrations.versions.d2deb4db4111_",
        "peekOfCode": "revision = 'd2deb4db4111'\ndown_revision = '51c2375b82ef'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=128),\n               type_=sa.String(length=500),",
        "detail": "migrations.versions.d2deb4db4111_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.d2deb4db4111_",
        "description": "migrations.versions.d2deb4db4111_",
        "peekOfCode": "down_revision = '51c2375b82ef'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=128),\n               type_=sa.String(length=500),\n               existing_nullable=False)",
        "detail": "migrations.versions.d2deb4db4111_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.d2deb4db4111_",
        "description": "migrations.versions.d2deb4db4111_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=128),\n               type_=sa.String(length=500),\n               existing_nullable=False)\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.d2deb4db4111_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.d2deb4db4111_",
        "description": "migrations.versions.d2deb4db4111_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=128),\n               type_=sa.String(length=500),\n               existing_nullable=False)\n    # ### end Alembic commands ###\ndef downgrade():",
        "detail": "migrations.versions.d2deb4db4111_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.dd5a117c2fca_",
        "description": "migrations.versions.dd5a117c2fca_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=500),\n               type_=sa.String(length=500),\n               existing_nullable=False)",
        "detail": "migrations.versions.dd5a117c2fca_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.dd5a117c2fca_",
        "description": "migrations.versions.dd5a117c2fca_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('password_hash',\n               existing_type=sa.String(length=128),\n               type_=sa.VARCHAR(length=500),\n               existing_nullable=False)\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.dd5a117c2fca_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.dd5a117c2fca_",
        "description": "migrations.versions.dd5a117c2fca_",
        "peekOfCode": "revision = 'dd5a117c2fca'\ndown_revision = '6ccf51ad1887'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)",
        "detail": "migrations.versions.dd5a117c2fca_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.dd5a117c2fca_",
        "description": "migrations.versions.dd5a117c2fca_",
        "peekOfCode": "down_revision = '6ccf51ad1887'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',",
        "detail": "migrations.versions.dd5a117c2fca_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.dd5a117c2fca_",
        "description": "migrations.versions.dd5a117c2fca_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=500),",
        "detail": "migrations.versions.dd5a117c2fca_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.dd5a117c2fca_",
        "description": "migrations.versions.dd5a117c2fca_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.alter_column('fecha_verificacion',\n               existing_type=postgresql.TIMESTAMP(timezone=True),\n               nullable=True)\n        batch_op.alter_column('password_hash',\n               existing_type=sa.VARCHAR(length=500),\n               type_=sa.String(length=500),",
        "detail": "migrations.versions.dd5a117c2fca_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.e7d17459afa8_",
        "description": "migrations.versions.e7d17459afa8_",
        "peekOfCode": "def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('correo_pendiente', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_antiguo', sa.String(length=255), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_nuevo', sa.String(length=255), nullable=True))\n        batch_op.add_column(sa.Column('correo_antiguo_confirmado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n        batch_op.add_column(sa.Column('correo_nuevo_confirmado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n        batch_op.add_column(sa.Column('correo_token_expira', sa.DateTime(timezone=True), nullable=True))\n        batch_op.create_index(batch_op.f('ix_empleado_correo_pendiente'), ['correo_pendiente'], unique=True)",
        "detail": "migrations.versions.e7d17459afa8_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.e7d17459afa8_",
        "description": "migrations.versions.e7d17459afa8_",
        "peekOfCode": "def downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.drop_index(batch_op.f('ix_empleado_correo_pendiente'))\n        batch_op.drop_column('correo_token_expira')\n        batch_op.drop_column('correo_nuevo_confirmado')\n        batch_op.drop_column('correo_antiguo_confirmado')\n        batch_op.drop_column('correo_token_nuevo')\n        batch_op.drop_column('correo_token_antiguo')\n        batch_op.drop_column('correo_pendiente')",
        "detail": "migrations.versions.e7d17459afa8_",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.e7d17459afa8_",
        "description": "migrations.versions.e7d17459afa8_",
        "peekOfCode": "revision = 'e7d17459afa8'\ndown_revision = '39b3c80dd00f'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('correo_pendiente', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_antiguo', sa.String(length=255), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_nuevo', sa.String(length=255), nullable=True))",
        "detail": "migrations.versions.e7d17459afa8_",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.e7d17459afa8_",
        "description": "migrations.versions.e7d17459afa8_",
        "peekOfCode": "down_revision = '39b3c80dd00f'\nbranch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('correo_pendiente', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_antiguo', sa.String(length=255), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_nuevo', sa.String(length=255), nullable=True))\n        batch_op.add_column(sa.Column('correo_antiguo_confirmado', sa.Boolean(), server_default=sa.text('false'), nullable=False))",
        "detail": "migrations.versions.e7d17459afa8_",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.e7d17459afa8_",
        "description": "migrations.versions.e7d17459afa8_",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('correo_pendiente', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_antiguo', sa.String(length=255), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_nuevo', sa.String(length=255), nullable=True))\n        batch_op.add_column(sa.Column('correo_antiguo_confirmado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n        batch_op.add_column(sa.Column('correo_nuevo_confirmado', sa.Boolean(), server_default=sa.text('false'), nullable=False))",
        "detail": "migrations.versions.e7d17459afa8_",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.e7d17459afa8_",
        "description": "migrations.versions.e7d17459afa8_",
        "peekOfCode": "depends_on = None\ndef upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    with op.batch_alter_table('empleado', schema=None) as batch_op:\n        batch_op.add_column(sa.Column('correo_pendiente', sa.String(length=120), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_antiguo', sa.String(length=255), nullable=True))\n        batch_op.add_column(sa.Column('correo_token_nuevo', sa.String(length=255), nullable=True))\n        batch_op.add_column(sa.Column('correo_antiguo_confirmado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n        batch_op.add_column(sa.Column('correo_nuevo_confirmado', sa.Boolean(), server_default=sa.text('false'), nullable=False))\n        batch_op.add_column(sa.Column('correo_token_expira', sa.DateTime(timezone=True), nullable=True))",
        "detail": "migrations.versions.e7d17459afa8_",
        "documentation": {}
    },
    {
        "label": "get_engine",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def get_engine():\n    try:\n        # this works with Flask-SQLAlchemy<3 and Alchemical\n        return current_app.extensions['migrate'].db.get_engine()\n    except (TypeError, AttributeError):\n        # this works with Flask-SQLAlchemy>=3\n        return current_app.extensions['migrate'].db.engine\ndef get_engine_url():\n    try:\n        return get_engine().url.render_as_string(hide_password=False).replace(",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "get_engine_url",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def get_engine_url():\n    try:\n        return get_engine().url.render_as_string(hide_password=False).replace(\n            '%', '%%')\n    except AttributeError:\n        return str(get_engine().url).replace('%', '%%')\n# add your model's MetaData object here\n# for 'autogenerate' support\n# from myapp import mymodel\n# target_metadata = mymodel.Base.metadata",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "get_metadata",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def get_metadata():\n    if hasattr(target_db, 'metadatas'):\n        return target_db.metadatas[None]\n    return target_db.metadata\ndef run_migrations_offline():\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable\n    here as well.  By skipping the Engine creation\n    we don't even need a DBAPI to be available.",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "run_migrations_offline",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def run_migrations_offline():\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable\n    here as well.  By skipping the Engine creation\n    we don't even need a DBAPI to be available.\n    Calls to context.execute() here emit the given string to the\n    script output.\n    \"\"\"\n    url = config.get_main_option(\"sqlalchemy.url\")",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "run_migrations_online",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def run_migrations_online():\n    \"\"\"Run migrations in 'online' mode.\n    In this scenario we need to create an Engine\n    and associate a connection with the context.\n    \"\"\"\n    # this callback is used to prevent an auto-migration from being generated\n    # when there are no changes to the schema\n    # reference: http://alembic.zzzcomputing.com/en/latest/cookbook.html\n    def process_revision_directives(context, revision, directives):\n        if getattr(config.cmd_opts, 'autogenerate', False):",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "config = context.config\n# Interpret the config file for Python logging.\n# This line sets up loggers basically.\nfileConfig(config.config_file_name)\nlogger = logging.getLogger('alembic.env')\ndef get_engine():\n    try:\n        # this works with Flask-SQLAlchemy<3 and Alchemical\n        return current_app.extensions['migrate'].db.get_engine()\n    except (TypeError, AttributeError):",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "logger = logging.getLogger('alembic.env')\ndef get_engine():\n    try:\n        # this works with Flask-SQLAlchemy<3 and Alchemical\n        return current_app.extensions['migrate'].db.get_engine()\n    except (TypeError, AttributeError):\n        # this works with Flask-SQLAlchemy>=3\n        return current_app.extensions['migrate'].db.engine\ndef get_engine_url():\n    try:",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "target_db",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "target_db = current_app.extensions['migrate'].db\n# other values from the config, defined by the needs of env.py,\n# can be acquired:\n# my_important_option = config.get_main_option(\"my_important_option\")\n# ... etc.\ndef get_metadata():\n    if hasattr(target_db, 'metadatas'):\n        return target_db.metadatas[None]\n    return target_db.metadata\ndef run_migrations_offline():",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "Config",
        "kind": 6,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "class Config:\n    SECRET_KEY = os.getenv('SECRET_KEY', 'dev_key')\n    SQLALCHEMY_TRACK_MODIFICATIONS = False\n    ENCRYPTION_KEY = os.getenv('ENCRYPTION_KEY')\n    MAIL_SERVER = os.getenv(\"MAIL_SERVER\")\n    MAIL_PORT   = int(os.getenv(\"MAIL_PORT\", 587))\n    MAIL_USERNAME = os.getenv(\"MAIL_USERNAME\")\n    MAIL_PASSWORD = os.getenv(\"MAIL_PASSWORD\")\n    MAIL_USE_TLS  = os.getenv(\"MAIL_USE_TLS\", \"True\") == \"True\"\n    EMAIL_TOKEN_SALT = os.getenv(\"EMAIL_TOKEN_SALT\", \"verificacion-email\")",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "run",
        "description": "run",
        "peekOfCode": "app = create_app()\nif __name__ == '__main__':\n    app.run(debug=True)",
        "detail": "run",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "wsgi",
        "description": "wsgi",
        "peekOfCode": "app = create_app()",
        "detail": "wsgi",
        "documentation": {}
    }
]